% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repr-genesets.R
\name{repr_genesets}
\alias{repr_genesets}
\alias{genesets}
\alias{genesets.data.frame}
\alias{genesets.list}
\alias{genesets.character}
\alias{genesets.OrgDb}
\title{Create genesets representation}
\usage{
repr_genesets(gs, ..., min_size = NULL, max_size = NULL)

genesets(gs, ..., `_arg` = NULL)

\method{genesets}{data.frame}(gs, ..., select = NULL, `_arg` = NULL)

\method{genesets}{list}(gs, ..., ids = NULL, terms = NULL, descriptions = NULL, `_arg` = NULL)

\method{genesets}{character}(gs, ..., verbose = TRUE, `_arg` = NULL)

\method{genesets}{OrgDb}(gs, ..., keytype = "SYMBOL", ontology = NULL, `_arg` = NULL)
}
\arguments{
\item{gs}{Specify the gene sets to use. Accepted formats:
\itemize{
\item \code{character}: A string indicating the source of gene sets. Valid values
include:
\itemize{
\item \code{"go"} / \code{"GO"} or \code{"kegg"} / \code{"KEGG"}: Download gene sets from GO or
KEGG using \code{\link[=godb]{godb()}} or \code{\link[=kegg_genesets]{kegg_genesets()}}. Optional parameters include
\code{link}, \code{database}, \code{strategy}, and \code{save}. See \code{\link[=kegg_genesets]{kegg_genesets()}} and
\code{\link[=godb]{godb()}} for details.
\item The name of an \href{https://bioconductor.org/packages/release/BiocViews.html#___OrgDb}{\code{OrgDb}} package, used to extract GO gene sets.
\item Alternatively, provide a file path to a \code{.gmt} or \code{.gmx} file to import
custom gene sets.
}
\item \code{data.frame}: A data frame with 1â€“4 columns. Expected columns include:
\itemize{
\item (Optional) Gene set ID
\item (Optional) term name
\item (Optional) description
\item Gene symbols or features
}
\item \code{list}: A named or unnamed list where each element is a character vector of
genes. Optionally, attach \code{term} or \code{description} attributes to each
element, or \code{terms} / \code{descriptions} attributes to the entire list.
\item \code{OrgDb}: An
\href{https://bioconductor.org/packages/release/BiocViews.html#___OrgDb}{\code{OrgDb}}
object (e.g., \code{org.Hs.eg.db}) to extract GO gene sets.
}}

\item{...}{Additional arguments passed to the method.}

\item{min_size}{An integer specifying the minimum number of genes
a gene set must contain to be retained. If \code{NULL}, no lower bound is applied.}

\item{max_size}{An integer specifying the maximum number of genes
a gene set may contain to be retained. If \code{NULL}, no upper bound is applied.}

\item{_arg}{A single string of the argument name for \code{gs}, used by the
internal to provide better message.}

\item{select}{A character or integer vector select the columns to be used for
a data.frame input.}

\item{ids}{A character vector of gene set IDs for list input. If \code{NULL}, the
names of the input list will be used.}

\item{terms}{A character vector of gene set terms for list input.}

\item{descriptions}{A character vector of gene set descriptions for a list
input.}

\item{verbose}{A single logical value indicates whether the process should be
verbose.}

\item{keytype}{A single character string indicating which type of keys to
use.}

\item{ontology}{A character vector specifying the GO ontology to use. Must be
one or more of \code{"BP"}, \code{"CC"}, and \code{"MF"}.}
}
\value{
A \code{xbio_genesets} object.
}
\description{
\code{repr_genesets()} is a wrapper around \code{genesets()} that additionally cleans
and filters the gene sets. It removes invalid entries, such as gene sets with
no genes or those containing only missing values. This function ensures the
returned object is clean and ready for downstream analysis.

All analyses that depend on the gene set representation will use
\code{repr_genesets()} with its default arguments. If you want to customize
filtering, such as setting thresholds on gene set size (\code{min_size} /
\code{max_size}), you must call \code{repr_genesets()}/\code{gs_filter()} manually.
}
\examples{
# Read from a KEGG source
genesets("kegg")
repr_genesets("kegg", min_size = 5, max_size = 500)

# Load from a local GMT file
\dontrun{
genesets("path/to/genesets.gmt")
repr_genesets("path/to/genesets.gmt", min_size = 5, max_size = 500)
}

# Construct from a list
genesets(list(set1 = c("A", "B", "C"), set2 = c("X", "Y")))

# From a data.frame
df <- data.frame(set = c("A", "A", "B"), gene = c("x", "y", "z"))
genesets(df)

}
